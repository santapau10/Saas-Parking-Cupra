name: Build and Deploy to GKE

on:
  workflow_dispatch:
    inputs:
      namespace:
        description: "Namespace to create and deploy into"
        required: true
        default: "default" # Default namespace

# Environment variables available to all jobs and steps in this workflow

jobs:
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    environment: cupra # Establecer directamente a 'cupra-dev' para la rama dev
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GCP_APPLICATION_CREDENTIALS_JSON }}
      GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud CLI
      - name: Setup Google Cloud SDK
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

      - name: Configurar Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components update
          gcloud components install gke-gcloud-auth-plugin
      # Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Get Credentials
        run: |
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} \
            --zone us-central1-a \
            --project ${{ secrets.GCP_PROJECT_ID }}

      # Create Namespace in GKE
      - name: Create Namespace
        run: |
          kubectl create namespace ${{ github.event.inputs.namespace }} || echo "Namespace ${{ github.event.inputs.namespace }} already exists"

      - name: Crear archivo service-account.json
        run: |
          mkdir -p ./keys
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}" > ./keys/service-account.json

      - name: Crear secret
        run: |
          kubectl create secret generic service-account --from-file=./keys/service-account.json -n ${{ github.event.inputs.namespace }}
      # Deploy the Docker image to the GKE cluster using Helm
      - name: Deploy
        run: |
          helm install ${{ github.event.inputs.namespace }}-microservices ./backend/helm-deploy \
            --set namespace=${{ github.event.inputs.namespace }} \
            --wait

      - name: Wait for Ingress IP
        id: ingress_ip
        run: |
          echo "Waiting for Ingress IP..."
          ingress_ip=$(kubectl get ingress generic-ingress -n ${{ github.event.inputs.namespace }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          while [[ -z "$ingress_ip" ]]; do
            echo "Ingress IP not found, retrying in 1 minute..."
            sleep 60
            ingress_ip=$(kubectl get ingress generic-ingress -n ${{ github.event.inputs.namespace }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          done
          echo "Ingress IP: $ingress_ip"
          echo "::set-output name=ingress_ip::$ingress_ip"

      - name: Invoke Cloud Function to update IP
        run: |
          curl -X POST https://us-central1-cupra-cad.cloudfunctions.net/getIpFromDeployedCluster \
            -H "Content-Type: application/json" \
            -d '{"namespace": "${{ github.event.inputs.namespace }}", "ip": "${{ steps.ingress_ip.outputs.ingress_ip }}"}'
